{"version":3,"file":"index.js","sources":["../../src/utils/injectStylesheet.ts","../../src/utils/injectScript.ts","../../src/cdn/ck/createCKCdnUrl.ts","../../src/test-utils/cdn/removeAllCkEditorResources.ts","../../src/cdn/ckbox/createCKBoxCdnUrl.ts","../../src/test-utils/cdn/removeAllCkBoxResources.ts","../../src/test-utils/cdn/removeAllCkCdnResources.ts"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Map of injected stylesheets. It's used to prevent injecting the same stylesheet multiple times.\n * It happens quite often in React Strict mode when the component is rendered twice.\n */\nexport const INJECTED_STYLESHEETS = new Map<string, Promise<void>>();\n\n/**\n * Injects a stylesheet into the document.\n *\n * @param props.href The URL of the stylesheet to be injected.\n * @param props.placementInHead The placement of the stylesheet in the head.\n * @param props.attributes Additional attributes to be set on the link element.\n * @returns A promise that resolves when the stylesheet is loaded.\n */\nexport function injectStylesheet(\n\t{\n\t\thref,\n\t\tplacementInHead = 'start',\n\t\tattributes = {}\n\t}: InjectStylesheetProps\n): Promise<void> {\n\t// Return the promise if the stylesheet is already injected by this function.\n\tif ( INJECTED_STYLESHEETS.has( href ) ) {\n\t\treturn INJECTED_STYLESHEETS.get( href )!;\n\t}\n\n\t// Return the promise if the stylesheet is already present in the document but not injected by this function.\n\t// We are not sure if the stylesheet is loaded or not, so we have to show a warning in this case.\n\tconst maybePrevStylesheet = document.querySelector( `link[href=\"${ href }\"][rel=\"stylesheet\"]` );\n\n\tif ( maybePrevStylesheet ) {\n\t\tconsole.warn( `Stylesheet with \"${ href }\" href is already present in DOM!` );\n\t\tmaybePrevStylesheet.remove();\n\t}\n\n\t// Append the link tag to the head.\n\tconst appendLinkTagToHead = ( link: HTMLLinkElement ) => {\n\t\t// Inject styles after the stylesheets that are already present in the head.\n\t\t// Do not specify the `rel` attribute because we want to inject the stylesheet even after\n\t\t// preloading link tags.\n\t\tconst previouslyInjectedLinks = Array.from(\n\t\t\tdocument.head.querySelectorAll( 'link[data-injected-by=\"ckeditor-integration\"]' )\n\t\t);\n\n\t\tswitch ( placementInHead ) {\n\t\t\t// It'll append styles *before* the stylesheets that are already present in the head\n\t\t\t// but after the ones that are injected by this function.\n\t\t\tcase 'start':\n\t\t\t\tif ( previouslyInjectedLinks.length ) {\n\t\t\t\t\tpreviouslyInjectedLinks.slice( -1 )[ 0 ].after( link );\n\t\t\t\t} else {\n\t\t\t\t\tdocument.head.insertBefore( link, document.head.firstChild );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// It'll append styles *after* the stylesheets already in the head.\n\t\t\tcase 'end':\n\t\t\t\tdocument.head.appendChild( link );\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// Inject the stylesheet and return the promise.\n\tconst promise = new Promise<void>( ( resolve, reject ) => {\n\t\tconst link = document.createElement( 'link' );\n\n\t\t// Set additional attributes if provided.\n\t\tfor ( const [ key, value ] of Object.entries( attributes || {} ) ) {\n\t\t\tlink.setAttribute( key, value );\n\t\t}\n\n\t\tlink.setAttribute( 'data-injected-by', 'ckeditor-integration' );\n\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = href;\n\n\t\tlink.onerror = reject;\n\t\tlink.onload = () => {\n\t\t\tresolve();\n\t\t};\n\n\t\tappendLinkTagToHead( link );\n\n\t\t// It should remove stylesheet if stylesheet is being removed from the DOM.\n\t\tconst observer = new MutationObserver( mutations => {\n\t\t\tconst removedNodes = mutations.flatMap( mutation => Array.from( mutation.removedNodes ) );\n\n\t\t\tif ( removedNodes.includes( link ) ) {\n\t\t\t\tINJECTED_STYLESHEETS.delete( href );\n\t\t\t\tobserver.disconnect();\n\t\t\t}\n\t\t} );\n\n\t\tobserver.observe( document.head, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true\n\t\t} );\n\t} );\n\n\tINJECTED_STYLESHEETS.set( href, promise );\n\n\treturn promise;\n}\n\n/**\n * Props for the `injectStylesheet` function.\n */\ntype InjectStylesheetProps = {\n\n\t/**\n\t * The URL of the stylesheet to be injected.\n\t */\n\thref: string;\n\n\t/**\n\t * The placement of the stylesheet in the head. It can be either at the start or at the end\n\t * of the head. Default is 'start' because it allows user to override the styles easily.\n\t */\n\tplacementInHead?: 'start' | 'end';\n\n\t/**\n\t * Additional attributes to set on the link tag.\n\t */\n\tattributes?: Record<string, any>;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Map of injected scripts. It is used to prevent injecting the same script multiple times.\n * It happens quite often in React Strict mode when the component is rendered twice.\n */\nexport const INJECTED_SCRIPTS = new Map<string, Promise<void>>();\n\n/**\n * Injects a script into the document.\n *\n * @param src The URL of the script to be injected.\n * @param props Additional properties used to decide how the script should be injected.\n * @param props.attributes Additional attributes to be set on the script element.\n * @returns A promise that resolves when the script is loaded.\n */\nexport function injectScript(\n\tsrc: string,\n\t{ attributes }: InjectScriptProps = {}\n): Promise<void> {\n\t// Return the promise if the script is already injected by this function.\n\tif ( INJECTED_SCRIPTS.has( src ) ) {\n\t\treturn INJECTED_SCRIPTS.get( src )!;\n\t}\n\n\t// Return the promise if the script is already present in the document but not injected by this function.\n\t// We are not sure if the script is loaded or not, so we have to show warning in this case.\n\tconst maybePrevScript = document.querySelector( `script[src=\"${ src }\"]` );\n\n\tif ( maybePrevScript ) {\n\t\tconsole.warn( `Script with \"${ src }\" src is already present in DOM!` );\n\t\tmaybePrevScript.remove();\n\t}\n\n\t// Inject the script and return the promise.\n\tconst promise = new Promise<void>( ( resolve, reject ) => {\n\t\tconst script = document.createElement( 'script' );\n\n\t\tscript.onerror = reject;\n\t\tscript.onload = () => {\n\t\t\tresolve();\n\t\t};\n\n\t\t// Set additional attributes if provided.\n\t\tfor ( const [ key, value ] of Object.entries( attributes || {} ) ) {\n\t\t\tscript.setAttribute( key, value );\n\t\t}\n\n\t\tscript.setAttribute( 'data-injected-by', 'ckeditor-integration' );\n\n\t\tscript.type = 'text/javascript';\n\t\tscript.async = true;\n\t\tscript.src = src;\n\n\t\tdocument.head.appendChild( script );\n\n\t\t// It should remove script if script is being removed from the DOM.\n\t\tconst observer = new MutationObserver( mutations => {\n\t\t\tconst removedNodes = mutations.flatMap( mutation => Array.from( mutation.removedNodes ) );\n\n\t\t\tif ( removedNodes.includes( script ) ) {\n\t\t\t\tINJECTED_SCRIPTS.delete( src );\n\t\t\t\tobserver.disconnect();\n\t\t\t}\n\t\t} );\n\n\t\tobserver.observe( document.head, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true\n\t\t} );\n\t} );\n\n\tINJECTED_SCRIPTS.set( src, promise );\n\n\treturn promise;\n}\n\n/**\n * Props for the `injectScript` function.\n */\nexport type InjectScriptProps = {\n\tattributes?: Record<string, any>;\n};\n\n/**\n * Injects multiple scripts into the document in parallel.\n *\n * @param sources The URLs of the scripts to be injected.\n * @param props Additional properties used to decide how the script should be injected.\n * @returns A promise that resolves when all scripts are loaded.\n */\nexport async function injectScriptsInParallel( sources: Array<string>, props?: InjectScriptProps ): Promise<void> {\n\tawait Promise.all(\n\t\tsources.map( src => injectScript( src, props ) )\n\t);\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { CKCdnVersion } from './isCKCdnVersion.js';\n\n/**\n * The URL of the CKEditor CDN.\n */\nexport const CK_CDN_URL = 'https://cdn.ckeditor.com';\n\n/**\n * Creates a URL to a file on the CKEditor CDN.\n *\n * @param bundle The name of the bundle.\n * @param file The name of the file.\n * @param version The version of the file.\n * @returns A function that accepts the version of the file and returns the URL.\n *\n * ```ts\n * const url = createCKCdnUrl( 'classic', 'ckeditor.js', '27.0.0' );\n *\n * expect( url ).to.be.equal( 'https://cdn.ckeditor.com/classic/27.0.0/ckeditor.js' );\n * ```\n */\nexport function createCKCdnUrl( bundle: string, file: string, version: CKCdnVersion ): string {\n\treturn `${ CK_CDN_URL }/${ bundle }/${ version }/${ file }`;\n}\n\n/**\n * A function that creates a URL to a file on the CKEditor CDN.\n */\nexport type CKCdnUrlCreator = typeof createCKCdnUrl;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { INJECTED_STYLESHEETS } from '../../utils/injectStylesheet.js';\nimport { INJECTED_SCRIPTS } from '../../utils/injectScript.js';\nimport { CK_CDN_URL } from '../../cdn/ck/createCKCdnUrl.js';\n\n/**\n * Removes all CKEditor scripts from the DOM.\n */\nexport function removeCKEditorResources(): void {\n\tremoveCkCdnScripts();\n\tremoveCkCdnLinks();\n}\n\nfunction removeCkCdnScripts(): void {\n\t[ ...document.querySelectorAll( 'script' ) ]\n\t\t.filter( script => script.src.startsWith( CK_CDN_URL ) )\n\t\t.forEach( script => {\n\t\t\tINJECTED_SCRIPTS.delete( script.src );\n\t\t\tscript.remove();\n\t\t} );\n\n\t// Clear the CKEditor global variables\n\tdelete window.CKEDITOR;\n\tdelete window.CKEDITOR_PREMIUM_FEATURES;\n\twindow.CKEDITOR_VERSION = '';\n}\n\nfunction removeCkCdnLinks(): void {\n\t[ ...document.querySelectorAll( 'link' ) ]\n\t\t.filter( link => link.href.startsWith( CK_CDN_URL ) )\n\t\t.forEach( link => {\n\t\t\tINJECTED_STYLESHEETS.delete( link.href );\n\t\t\tlink.remove();\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { SemanticVersion } from '../../utils/version/isSemanticVersion.js';\n\n/**\n * The URL of the CKBox CDN.\n */\nexport const CKBOX_CDN_URL = 'https://cdn.ckbox.io';\n\n/**\n * A version of a file on the CKBox CDN.\n */\nexport type CKBoxCdnVersion = SemanticVersion;\n\n/**\n * Creates a URL to a file on the CKBox CDN.\n *\n * @param bundle The name of the bundle.\n * @param file The name of the file.\n * @param version The version of the file.\n * @returns A function that accepts the version of the file and returns the URL.\n *\n * ```ts\n * const url = createCKBoxCdnUrl( 'ckbox', 'ckbox.js', '2.5.1' );\n *\n * expect( url ).to.be.equal( 'https://cdn.ckbox.io/ckbox/2.5.1/ckbox.js' );\n * ```\n */\nexport function createCKBoxCdnUrl( bundle: string, file: string, version: CKBoxCdnVersion ): string {\n\treturn `${ CKBOX_CDN_URL }/${ bundle }/${ version }/${ file }`;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { INJECTED_SCRIPTS } from '../../utils/injectScript.js';\nimport { INJECTED_STYLESHEETS } from '../../utils/injectStylesheet.js';\nimport { CKBOX_CDN_URL } from '../../cdn/ckbox/createCKBoxCdnUrl.js';\n\n/**\n * Removes all CKBox resources from the DOM.\n */\nexport function removeCkBoxResources(): void {\n\tremoveCkBoxCdnScripts();\n\tremoveCkBoxCdnLinks();\n}\n\n/**\n * Removes all CKBox scripts from the DOM.\n */\nfunction removeCkBoxCdnScripts(): void {\n\t[ ...document.querySelectorAll( 'script' ) ]\n\t\t.filter( script => script.src.startsWith( CKBOX_CDN_URL ) )\n\t\t.forEach( script => {\n\t\t\tINJECTED_SCRIPTS.delete( script.src );\n\t\t\tscript.remove();\n\t\t} );\n\n\tdelete ( window as any ).CKBox;\n}\n\n/**\n * Removes all CKBox stylesheets and preloads from the DOM.\n */\nfunction removeCkBoxCdnLinks(): void {\n\t[ ...document.querySelectorAll( 'link' ) ]\n\t\t.filter( link => link.href.startsWith( CKBOX_CDN_URL ) )\n\t\t.forEach( link => {\n\t\t\tINJECTED_STYLESHEETS.delete( link.href );\n\t\t\tlink.remove();\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { removeCKEditorResources } from './removeAllCkEditorResources.js';\nimport { removeCkBoxResources } from './removeAllCkBoxResources.js';\n\n/**\n * Removes all CKEditor CDN resources from the DOM.\n */\nexport function removeAllCkCdnResources(): void {\n\tremoveCKEditorResources();\n\tremoveCkBoxResources();\n}\n"],"names":["INJECTED_STYLESHEETS","INJECTED_SCRIPTS","CK_CDN_URL","removeCKEditorResources","removeCkCdnScripts","removeCkCdnLinks","script","link","CKBOX_CDN_URL","removeCkBoxResources","removeCkBoxCdnScripts","removeCkBoxCdnLinks","removeAllCkCdnResources"],"mappings":"AAAA;AAAA;AAAA;AAAA;AASa,MAAAA,wBAA2B,IAA2B;ACTnE;AAAA;AAAA;AAAA;AASa,MAAAC,wBAAuB,IAA2B;ACT/D;AAAA;AAAA;AAAA;AAUO,MAAMC,IAAa;ACV1B;AAAA;AAAA;AAAA;AAYO,SAASC,IAAgC;AAC5B,EAAAC,KACFC;AAClB;AAEA,SAASD,IAA2B;AACnC,GAAE,GAAG,SAAS,iBAAkB,QAAS,CAAE,EACzC,OAAQ,CAAUE,MAAAA,EAAO,IAAI,WAAYJ,CAAW,CAAE,EACtD,QAAS,CAAUI,MAAA;AACF,IAAAL,EAAA,OAAQK,EAAO,GAAI,GACpCA,EAAO,OAAO;AAAA,EAAA,CACb,GAGH,OAAO,OAAO,UACd,OAAO,OAAO,2BACd,OAAO,mBAAmB;AAC3B;AAEA,SAASD,IAAyB;AACjC,GAAE,GAAG,SAAS,iBAAkB,MAAO,CAAE,EACvC,OAAQ,CAAQE,MAAAA,EAAK,KAAK,WAAYL,CAAW,CAAE,EACnD,QAAS,CAAQK,MAAA;AACI,IAAAP,EAAA,OAAQO,EAAK,IAAK,GACvCA,EAAK,OAAO;AAAA,EAAA,CACX;AACJ;ACtCA;AAAA;AAAA;AAAA;AAUO,MAAMC,IAAgB;ACV7B;AAAA;AAAA;AAAA;AAYO,SAASC,IAA6B;AACtB,EAAAC,KACFC;AACrB;AAKA,SAASD,IAA8B;AACtC,GAAE,GAAG,SAAS,iBAAkB,QAAS,CAAE,EACzC,OAAQ,CAAUJ,MAAAA,EAAO,IAAI,WAAYE,CAAc,CAAE,EACzD,QAAS,CAAUF,MAAA;AACF,IAAAL,EAAA,OAAQK,EAAO,GAAI,GACpCA,EAAO,OAAO;AAAA,EAAA,CACb,GAEH,OAAS,OAAgB;AAC1B;AAKA,SAASK,IAA4B;AACpC,GAAE,GAAG,SAAS,iBAAkB,MAAO,CAAE,EACvC,OAAQ,CAAQJ,MAAAA,EAAK,KAAK,WAAYC,CAAc,CAAE,EACtD,QAAS,CAAQD,MAAA;AACI,IAAAP,EAAA,OAAQO,EAAK,IAAK,GACvCA,EAAK,OAAO;AAAA,EAAA,CACX;AACJ;ACzCA;AAAA;AAAA;AAAA;AAWO,SAASK,IAAgC;AACvB,EAAAT,KACHM;AACtB;"}