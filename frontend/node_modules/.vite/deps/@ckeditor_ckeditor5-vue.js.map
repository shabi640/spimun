{
  "version": 3,
  "sources": ["../../@ckeditor/ckeditor5-integrations-common/src/utils/defer.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/waitFor.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/injectScript.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/injectStylesheet.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/isSSR.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/once.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/overwriteArray.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/overwriteObject.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/preloadResource.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/shallowCompareArrays.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/uid.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/uniq.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/waitForWindowEntry.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/filterObjectValues.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/filterBlankObjectValues.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/mapObjectValues.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/without.ts", "../../@ckeditor/ckeditor5-integrations-common/src/plugins/appendExtraPluginsToEditorConfig.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/version/isSemanticVersion.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/ck/isCKCdnVersion.ts", "../../@ckeditor/ckeditor5-integrations-common/src/utils/version/destructureSemanticVersion.ts", "../../@ckeditor/ckeditor5-integrations-common/src/license/getLicenseVersionFromEditorVersion.ts", "../../@ckeditor/ckeditor5-integrations-common/src/installation-info/getCKBaseBundleInstallationInfo.ts", "../../@ckeditor/ckeditor5-integrations-common/src/installation-info/getSupportedLicenseVersionInstallationInfo.ts", "../../@ckeditor/ckeditor5-integrations-common/src/license/isCKEditorFreeLicense.ts", "../../@ckeditor/ckeditor5-integrations-common/src/plugins/IntegrationUsageDataPlugin.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/ck/createCKCdnUrl.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/ckbox/createCKBoxCdnUrl.ts", "../../@ckeditor/ckeditor5-integrations-common/src/docs/createCKDocsUrl.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/ck/createCKCdnBaseBundlePack.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/ck/createCKCdnPremiumBundlePack.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/utils/loadCKCdnResourcesPack.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/utils/combineCKCdnBundlesPacks.ts", "../../@ckeditor/ckeditor5-integrations-common/src/installation-info/getCKBoxInstallationInfo.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/ckbox/createCKBoxCdnBundlePack.ts", "../../@ckeditor/ckeditor5-integrations-common/src/license/isCKCdnSupportedByEditorVersion.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/plugins/combineCdnPluginsPacks.ts", "../../@ckeditor/ckeditor5-integrations-common/src/cdn/loadCKEditorCloud.ts", "../../@ckeditor/ckeditor5-vue/src/plugins/VueIntegrationUsageDataPlugin.ts", "../../@ckeditor/ckeditor5-vue/src/plugins/appendAllIntegrationPluginsToConfig.ts", "../../@ckeditor/ckeditor5-vue/src/ckeditor.vue", "../../@ckeditor/ckeditor5-vue/src/composables/useAsync.ts", "../../@ckeditor/ckeditor5-vue/src/useCKEditorCloud.ts", "../../@ckeditor/ckeditor5-vue/src/plugin.ts"],
  "sourcesContent": ["/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nexport type Defer<E> = {\n\tpromise: Promise<E>;\n\tresolve: ( value: E ) => void;\n};\n\n/**\n * This function generates a promise that can be resolved by invoking the returned `resolve` method.\n * It proves to be beneficial in the creation of various types of locks and semaphores.\n *\n * It can be replaced with `Promise.withResolvers()` in the future.\n */\nexport function createDefer<E = void>(): Defer<E> {\n\tconst deferred: Defer<E> = {\n\t\tresolve: null as any,\n\t\tpromise: null as any\n\t};\n\n\tdeferred.promise = new Promise<E>( resolve => {\n\t\tdeferred.resolve = resolve;\n\t} );\n\n\treturn deferred;\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { Awaitable } from '../types/Awaitable.js';\n\n/**\n * Waits for the provided callback to succeed. The callback is executed multiple times until it succeeds or the timeout is reached.\n * It's executed immediately and then with a delay defined by the `retry` option.\n *\n * @param callback The callback to execute.\n * @param config Configuration for the function.\n * @returns A promise that resolves when the callback succeeds.\n *\n * @example\n * ```ts\n * await waitFor( async () => {\n * \tconst element = document.querySelector( '.my-element' );\n * \tif ( !element ) {\n * \t\tthrow new Error( 'Element not found.' );\n * \t}\n * } );\n * ```\n */\nexport function waitFor<R>(\n\tcallback: () => Awaitable<R>,\n\t{\n\t\ttimeOutAfter = 500,\n\t\tretryAfter = 100\n\t}: WaitForConfig = {}\n): Promise<R> {\n\t// Retry the callback until it succeeds or the timeout is reached.\n\treturn new Promise<R>( ( resolve, reject ) => {\n\t\tconst startTime = Date.now();\n\t\tlet lastError: Error | null = null;\n\n\t\tconst timeoutTimerId = setTimeout( () => {\n\t\t\treject( lastError ?? new Error( 'Timeout' ) );\n\t\t}, timeOutAfter );\n\n\t\tconst tick = async () => {\n\t\t\ttry {\n\t\t\t\tconst result = await callback();\n\t\t\t\tclearTimeout( timeoutTimerId );\n\t\t\t\tresolve( result );\n\t\t\t} catch ( err: any ) {\n\t\t\t\tlastError = err;\n\n\t\t\t\tif ( Date.now() - startTime > timeOutAfter ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout( tick, retryAfter );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttick();\n\t} );\n}\n\n/**\n * Configuration for the `waitFor` function.\n */\nexport type WaitForConfig = {\n\t// The time in milliseconds after which the function will stop retrying and reject the promise.\n\ttimeOutAfter?: number;\n\n\t// The time in milliseconds between retries.\n\tretryAfter?: number;\n};\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Map of injected scripts. It is used to prevent injecting the same script multiple times.\n * It happens quite often in React Strict mode when the component is rendered twice.\n */\nexport const INJECTED_SCRIPTS = new Map<string, Promise<void>>();\n\n/**\n * Injects a script into the document.\n *\n * @param src The URL of the script to be injected.\n * @param props Additional properties used to decide how the script should be injected.\n * @param props.attributes Additional attributes to be set on the script element.\n * @returns A promise that resolves when the script is loaded.\n */\nexport function injectScript(\n\tsrc: string,\n\t{ attributes }: InjectScriptProps = {}\n): Promise<void> {\n\t// Return the promise if the script is already injected by this function.\n\tif ( INJECTED_SCRIPTS.has( src ) ) {\n\t\treturn INJECTED_SCRIPTS.get( src )!;\n\t}\n\n\t// Return the promise if the script is already present in the document but not injected by this function.\n\t// We are not sure if the script is loaded or not, so we have to show warning in this case.\n\tconst maybePrevScript = document.querySelector( `script[src=\"${ src }\"]` );\n\n\tif ( maybePrevScript ) {\n\t\tconsole.warn( `Script with \"${ src }\" src is already present in DOM!` );\n\t\tmaybePrevScript.remove();\n\t}\n\n\t// Inject the script and return the promise.\n\tconst promise = new Promise<void>( ( resolve, reject ) => {\n\t\tconst script = document.createElement( 'script' );\n\n\t\tscript.onerror = reject;\n\t\tscript.onload = () => {\n\t\t\tresolve();\n\t\t};\n\n\t\t// Set additional attributes if provided.\n\t\tfor ( const [ key, value ] of Object.entries( attributes || {} ) ) {\n\t\t\tscript.setAttribute( key, value );\n\t\t}\n\n\t\tscript.setAttribute( 'data-injected-by', 'ckeditor-integration' );\n\n\t\tscript.type = 'text/javascript';\n\t\tscript.async = true;\n\t\tscript.src = src;\n\n\t\tdocument.head.appendChild( script );\n\n\t\t// It should remove script if script is being removed from the DOM.\n\t\tconst observer = new MutationObserver( mutations => {\n\t\t\tconst removedNodes = mutations.flatMap( mutation => Array.from( mutation.removedNodes ) );\n\n\t\t\tif ( removedNodes.includes( script ) ) {\n\t\t\t\tINJECTED_SCRIPTS.delete( src );\n\t\t\t\tobserver.disconnect();\n\t\t\t}\n\t\t} );\n\n\t\tobserver.observe( document.head, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true\n\t\t} );\n\t} );\n\n\tINJECTED_SCRIPTS.set( src, promise );\n\n\treturn promise;\n}\n\n/**\n * Props for the `injectScript` function.\n */\nexport type InjectScriptProps = {\n\tattributes?: Record<string, any>;\n};\n\n/**\n * Injects multiple scripts into the document in parallel.\n *\n * @param sources The URLs of the scripts to be injected.\n * @param props Additional properties used to decide how the script should be injected.\n * @returns A promise that resolves when all scripts are loaded.\n */\nexport async function injectScriptsInParallel( sources: Array<string>, props?: InjectScriptProps ): Promise<void> {\n\tawait Promise.all(\n\t\tsources.map( src => injectScript( src, props ) )\n\t);\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Map of injected stylesheets. It's used to prevent injecting the same stylesheet multiple times.\n * It happens quite often in React Strict mode when the component is rendered twice.\n */\nexport const INJECTED_STYLESHEETS = new Map<string, Promise<void>>();\n\n/**\n * Injects a stylesheet into the document.\n *\n * @param props.href The URL of the stylesheet to be injected.\n * @param props.placementInHead The placement of the stylesheet in the head.\n * @param props.attributes Additional attributes to be set on the link element.\n * @returns A promise that resolves when the stylesheet is loaded.\n */\nexport function injectStylesheet(\n\t{\n\t\thref,\n\t\tplacementInHead = 'start',\n\t\tattributes = {}\n\t}: InjectStylesheetProps\n): Promise<void> {\n\t// Return the promise if the stylesheet is already injected by this function.\n\tif ( INJECTED_STYLESHEETS.has( href ) ) {\n\t\treturn INJECTED_STYLESHEETS.get( href )!;\n\t}\n\n\t// Return the promise if the stylesheet is already present in the document but not injected by this function.\n\t// We are not sure if the stylesheet is loaded or not, so we have to show a warning in this case.\n\tconst maybePrevStylesheet = document.querySelector( `link[href=\"${ href }\"][rel=\"stylesheet\"]` );\n\n\tif ( maybePrevStylesheet ) {\n\t\tconsole.warn( `Stylesheet with \"${ href }\" href is already present in DOM!` );\n\t\tmaybePrevStylesheet.remove();\n\t}\n\n\t// Append the link tag to the head.\n\tconst appendLinkTagToHead = ( link: HTMLLinkElement ) => {\n\t\t// Inject styles after the stylesheets that are already present in the head.\n\t\t// Do not specify the `rel` attribute because we want to inject the stylesheet even after\n\t\t// preloading link tags.\n\t\tconst previouslyInjectedLinks = Array.from(\n\t\t\tdocument.head.querySelectorAll( 'link[data-injected-by=\"ckeditor-integration\"]' )\n\t\t);\n\n\t\tswitch ( placementInHead ) {\n\t\t\t// It'll append styles *before* the stylesheets that are already present in the head\n\t\t\t// but after the ones that are injected by this function.\n\t\t\tcase 'start':\n\t\t\t\tif ( previouslyInjectedLinks.length ) {\n\t\t\t\t\tpreviouslyInjectedLinks.slice( -1 )[ 0 ].after( link );\n\t\t\t\t} else {\n\t\t\t\t\tdocument.head.insertBefore( link, document.head.firstChild );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// It'll append styles *after* the stylesheets already in the head.\n\t\t\tcase 'end':\n\t\t\t\tdocument.head.appendChild( link );\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// Inject the stylesheet and return the promise.\n\tconst promise = new Promise<void>( ( resolve, reject ) => {\n\t\tconst link = document.createElement( 'link' );\n\n\t\t// Set additional attributes if provided.\n\t\tfor ( const [ key, value ] of Object.entries( attributes || {} ) ) {\n\t\t\tlink.setAttribute( key, value );\n\t\t}\n\n\t\tlink.setAttribute( 'data-injected-by', 'ckeditor-integration' );\n\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = href;\n\n\t\tlink.onerror = reject;\n\t\tlink.onload = () => {\n\t\t\tresolve();\n\t\t};\n\n\t\tappendLinkTagToHead( link );\n\n\t\t// It should remove stylesheet if stylesheet is being removed from the DOM.\n\t\tconst observer = new MutationObserver( mutations => {\n\t\t\tconst removedNodes = mutations.flatMap( mutation => Array.from( mutation.removedNodes ) );\n\n\t\t\tif ( removedNodes.includes( link ) ) {\n\t\t\t\tINJECTED_STYLESHEETS.delete( href );\n\t\t\t\tobserver.disconnect();\n\t\t\t}\n\t\t} );\n\n\t\tobserver.observe( document.head, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true\n\t\t} );\n\t} );\n\n\tINJECTED_STYLESHEETS.set( href, promise );\n\n\treturn promise;\n}\n\n/**\n * Props for the `injectStylesheet` function.\n */\ntype InjectStylesheetProps = {\n\n\t/**\n\t * The URL of the stylesheet to be injected.\n\t */\n\thref: string;\n\n\t/**\n\t * The placement of the stylesheet in the head. It can be either at the start or at the end\n\t * of the head. Default is 'start' because it allows user to override the styles easily.\n\t */\n\tplacementInHead?: 'start' | 'end';\n\n\t/**\n\t * Additional attributes to set on the link tag.\n\t */\n\tattributes?: Record<string, any>;\n};\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nexport function isSSR(): boolean {\n\treturn typeof window === 'undefined';\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Ensures that passed function will be executed only once.\n */\nexport function once<A extends Array<any>, R = void>( fn: ( ...args: A ) => R ): ( ...args: A ) => R {\n\tlet lastResult: { current: R } | null = null;\n\n\treturn ( ...args: A ): R => {\n\t\tif ( !lastResult ) {\n\t\t\tlastResult = {\n\t\t\t\tcurrent: fn( ...args )\n\t\t\t};\n\t\t}\n\n\t\treturn lastResult.current;\n\t};\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Clear whole array while keeping its reference.\n */\nexport function overwriteArray<A extends Array<any>>( source: A, destination: A ): A {\n\tdestination.length = 0;\n\tdestination.push( ...source );\n\n\treturn destination;\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Clears whole object while keeping its reference.\n */\nexport function overwriteObject<O extends Record<string, any>>( source: O, destination: O ): O {\n\tfor ( const prop of Object.getOwnPropertyNames( destination ) ) {\n\t\tdelete destination[ prop ];\n\t}\n\n\t// Prevent assigning self referencing attributes which crashes `Object.assign`.\n\tfor ( const [ key, value ] of Object.entries( source ) ) {\n\t\tif ( value !== destination && key !== 'prototype' && key !== '__proto__' ) {\n\t\t\t( destination as any )[ key ] = value;\n\t\t}\n\t}\n\n\treturn destination;\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Appends a `<link>` element to the `<head>` to preload a resource.\n *\n * \t* It should detect if the resource is already preloaded.\n * \t* It should detect type of the resource and set the `as` attribute accordingly.\n *\n * @param url The URL of the resource to preload.\n * @param props Additional properties for the preload.\n * @param props.attributes Additional attributes to be set on the `<link>` element.\n */\nexport function preloadResource(\n\turl: string,\n\t{ attributes }: PreloadResourceProps = {}\n): void {\n\tif ( document.head.querySelector( `link[href=\"${ url }\"][rel=\"preload\"]` ) ) {\n\t\treturn;\n\t}\n\n\tconst link = document.createElement( 'link' );\n\n\t// Set additional attributes if provided.\n\tfor ( const [ key, value ] of Object.entries( attributes || {} ) ) {\n\t\tlink.setAttribute( key, value );\n\t}\n\n\tlink.setAttribute( 'data-injected-by', 'ckeditor-integration' );\n\n\tlink.rel = 'preload';\n\tlink.as = detectTypeOfResource( url );\n\tlink.href = url;\n\n\tdocument.head.insertBefore( link, document.head.firstChild );\n}\n\n/**\n * Properties for the `preloadResource` function.\n */\ntype PreloadResourceProps = {\n\tattributes?: Record<string, any>;\n};\n\n/**\n * Detects the type of the resource based on its URL.\n */\nfunction detectTypeOfResource( url: string ): string {\n\tswitch ( true ) {\n\t\tcase /\\.css$/.test( url ):\n\t\t\treturn 'style';\n\n\t\tcase /\\.js$/.test( url ):\n\t\t\treturn 'script';\n\n\t\tdefault:\n\t\t\treturn 'fetch';\n\t}\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Shallow comparison of two arrays.\n */\nexport function shallowCompareArrays<T>(\n\ta: Readonly<Array<T> | null>,\n\tb: Readonly<Array<T> | null>\n): boolean {\n\tif ( a === b ) {\n\t\treturn true;\n\t}\n\n\tif ( !a || !b ) {\n\t\treturn false;\n\t}\n\n\tfor ( let i = 0; i < a.length; ++i ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * A hash table of hex numbers to avoid using toString() in uid() which is costly.\n * [ '00', '01', '02', ..., 'fe', 'ff' ]\n */\nconst HEX_NUMBERS = new Array( 256 ).fill( '' )\n\t.map( ( _, index ) => ( '0' + ( index ).toString( 16 ) ).slice( -2 ) );\n\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns An unique id string.\n */\nexport function uid(): string {\n\t// Generate 4 random 32-bit numbers.\n\tconst [ r1, r2, r3, r4 ] = crypto.getRandomValues( new Uint32Array( 4 ) );\n\n\t// Make sure that id does not start with number.\n\treturn 'e' +\n\t\tHEX_NUMBERS[ r1 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 24 & 0xFF ];\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * A utility function that removes duplicate elements from an array.\n */\nexport function uniq<A>( source: Array<A> ): Array<A> {\n\treturn Array.from( new Set( source ) );\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { waitFor, type WaitForConfig } from './waitFor.js';\n\n/**\n * Waits for the provided window entry to be available. It's used mostly for waiting for the CKEditor 5 window object to be available.\n * In theory these entries should be available immediately, but in practice, they might be loaded asynchronously because browser might\n * delay execution of the script even if it's loaded synchronously.\n *\n * Function ensures that proper type declarations are present on global Window interface.\n *\n * @param entryNames The names of the window entries to wait for.\n * @param config Configuration for the function.\n * @returns A promise that resolves when the window entry is available.\n *\n * @example\n * ```ts\n * const ckeditor = await waitForWindowEntry( [ 'CKEditor' ] );\n * ```\n */\nexport async function waitForWindowEntry<\n\tN extends keyof Window,\n\tO = Window[ N ]\n>( entryNames: Array<N>, config?: WaitForConfig ): Promise<O> {\n\t// Try to pick the bundle from the window object.\n\tconst tryPickBundle = () => (\n\t\tentryNames\n\t\t\t.map( name => ( window as any )[ name ] )\n\t\t\t.filter( Boolean )[ 0 ]\n\t);\n\n\treturn waitFor<O>(\n\t\t() => {\n\t\t\tconst result = tryPickBundle();\n\n\t\t\tif ( !result ) {\n\t\t\t\tthrow new Error( `Window entry \"${ entryNames.join( ',' ) }\" not found.` );\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tconfig\n\t);\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Filters object values using the provided filter function.\n *\n * @param obj Object to filter.\n * @param filter Function that filters the object values.\n * @returns Object with filtered values.\n *\n * @example\n * ```ts\n * const obj = {\n * \ta: 1,\n * \tb: 2\n * };\n *\n * const filteredObj = filterObjectValues( value => value > 1, obj );\n * // filteredObj is { b: 2 }\n * ```\n */\nexport function filterObjectValues<T>(\n\tobj: Record<string, T>,\n\tfilter: ( value: T, key: string ) => boolean\n): Record<string, T> {\n\tconst filteredEntries = Object\n\t\t.entries( obj )\n\t\t.filter( ( [ key, value ] ) => filter( value, key ) );\n\n\treturn Object.fromEntries( filteredEntries );\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { filterObjectValues } from './filterObjectValues.js';\n\n/**\n * Removes null and undefined values from an object.\n *\n * @param obj Object to filter.\n * @returns Object with filtered values.\n * @example\n * ```ts\n * const obj = {\n * \ta: 1,\n * \tb: null,\n * \tc: undefined\n * };\n *\n * const filteredObj = filterBlankObjectValues( obj );\n * // filteredObj is { a: 1 }\n * ```\n */\nexport function filterBlankObjectValues<T>( obj: Record<string, T> ): FilterBlankRecordProperties<T> {\n\treturn filterObjectValues(\n\t\tobj,\n\t\tvalue => value !== null && value !== undefined\n\t) as FilterBlankRecordProperties<T>;\n}\n\n/**\n * Removes null and undefined values from an object.\n */\ntype FilterBlankRecordProperties<T> = Record<string, Exclude<T, null | undefined>>;\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Maps object values using the provided mapper function.\n *\n * @param obj Object to map.\n * @param mapper Function that maps the object values.\n * @returns Object with mapped values.\n *\n * @example\n * ```ts\n * const obj = {\n * \ta: 1,\n * \tb: 2\n * };\n *\n * const mappedObj = mapObjectValues( obj, value => value * 2 );\n * // mappedObj is { a: 2, b: 4 }\n * ```\n */\nexport function mapObjectValues<T, U>(\n\tobj: Record<string, T>,\n\tmapper: ( value: T, key: string ) => U\n): Record<string, U> {\n\tconst mappedEntries = Object\n\t\t.entries( obj )\n\t\t.map( ( [ key, value ] ) => [ key, mapper( value, key ) ] as const );\n\n\treturn Object.fromEntries( mappedEntries );\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * Removes items from an array by values.\n *\n * @param itemsToRemove Items to remove.\n * @param items Array to remove items from.\n * @returns Array without removed items.\n */\nexport function without<A>( itemsToRemove: Array<A>, items: Array<A> ): Array<A> {\n\treturn items.filter( item => !itemsToRemove.includes( item ) );\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { EditorConfig, PluginConstructor } from 'ckeditor5';\n\n/**\n * Appends plugins to the editor configuration.\n * It uses the `extraPlugins` property to append the plugins to avoid dealing with built-in constructor plugins.\n *\n * @param config The editor configuration.\n * @param plugins The plugins to append.\n * @returns The editor configuration with the plugins appended.\n * @example\n * ```ts\n * const editorConfig = appendExtraPluginsToEditorConfig(\n * \t{\n * \t\textraPlugins: [ 'Plugin1' ]\n * \t},\n * \t[ 'Plugin2' ]\n * );\n *\n * console.log( editorConfig.extraPlugins ); // [ 'Plugin1', 'Plugin2' ]\n * ```\n */\nexport function appendExtraPluginsToEditorConfig(\n\tconfig: EditorConfig,\n\tplugins: Array<PluginConstructor>\n): EditorConfig {\n\tconst extraPlugins = config.extraPlugins || [];\n\n\t// Do not use `uniq`. There might be integrations with duplicated plugins, so to\n\t// make it backward compatible, we need to keep the order of the plugins.\n\treturn {\n\t\t...config,\n\t\textraPlugins: [\n\t\t\t...extraPlugins,\n\t\t\t...plugins.filter( item => !extraPlugins.includes( item ) )\n\t\t]\n\t};\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nexport type SemanticVersion = `${ number }.${ number }.${ number }`;\n\n/**\n * Checks if the given string is a semantic version number.\n *\n * @param version - The string to check.\n * @returns `true` if the string is a semantic version, `false` otherwise.\n */\nexport function isSemanticVersion( version: string | undefined | null ): version is SemanticVersion {\n\treturn !!version && /^\\d+\\.\\d+\\.\\d+/.test( version );\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { isSemanticVersion, type SemanticVersion } from '../../utils/version/isSemanticVersion.js';\n\n/**\n * A version of the CKEditor that is used for testing purposes.\n */\nexport type CKCdnTestingVersion =\n\t| 'nightly'\n\t| `nightly-${ string }`\n\t| 'alpha'\n\t| 'staging'\n\t| 'internal';\n\n/**\n * A version of a file on the CKEditor CDN.\n */\nexport type CKCdnVersion =\n\t| SemanticVersion\n\t| CKCdnTestingVersion;\n\n/**\n * Checks if the given string is a version of a file on the CKEditor CDN.\n *\n * @param version - The string to check.\n * @returns `true` if the string is a version of a file on the CKEditor CDN, `false` otherwise.\n * @example\n * ```ts\n * isCKCdnTestingVersion( '1.2.3-nightly-abc' ); // -> true\n * isCKCdnTestingVersion( '1.2.3-internal-abc' ); // -> true\n * isCKCdnTestingVersion( '1.2.3-alpha.1' ); // -> true\n * isCKCdnTestingVersion( '1.2.3' ); // -> false\n * isCKCdnTestingVersion( 'nightly' ); // -> true\n * isCKCdnTestingVersion( 'nightly-abc' ); // -> true\n * isCKCdnTestingVersion( 'staging' ); // -> true\n * ```\n */\nexport function isCKCdnTestingVersion( version: string | undefined ): version is CKCdnTestingVersion {\n\tif ( !version ) {\n\t\treturn false;\n\t}\n\n\treturn [ 'nightly', 'alpha', 'internal', 'nightly-', 'staging' ].some( testVersion => version.includes( testVersion ) );\n}\n\n/**\n * Checks if the given string is a version of a file on the CKEditor CDN.\n *\n * @param version - The string to check.\n * @returns `true` if the string is a version of a file on the CKEditor CDN, `false` otherwise.\n * @example\n * ```ts\n * isCKCdnVersion( 'nightly' ); // -> true\n * isCKCdnVersion( 'alpha' ); // -> true\n * isCKCdnVersion( 'rc-1.2.3' ); // -> true\n * isCKCdnVersion( '1.2.3' ); // -> true\n * isCKCdnVersion( 'nightly-abc' ); // -> true\n * isCKCdnVersion( 'staging' ); // -> true\n * ```\n */\nexport function isCKCdnVersion( version: string | undefined ): version is CKCdnVersion {\n\treturn isSemanticVersion( version ) || isCKCdnTestingVersion( version );\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { isSemanticVersion, type SemanticVersion } from './isSemanticVersion.js';\n\ntype DestructuredSemanticVersion = {\n\tmajor: number;\n\tminor: number;\n\tpatch: number;\n};\n\n/**\n * Destructure a semantic version string into its major, minor, and patch components.\n *\n * @param version - The semantic version string to destructure.\n * @returns An object containing the major, minor, and patch numbers.\n * @throws Will throw an error if the provided version is not a valid semantic version.\n */\nexport function destructureSemanticVersion( version: SemanticVersion ): DestructuredSemanticVersion {\n\tif ( !isSemanticVersion( version ) ) {\n\t\tthrow new Error( `Invalid semantic version: ${ version || '<blank>' }.` );\n\t}\n\n\tconst [ major, minor, patch ] = version.split( '.' );\n\n\treturn {\n\t\tmajor: Number.parseInt( major, 10 ),\n\t\tminor: Number.parseInt( minor, 10 ),\n\t\tpatch: Number.parseInt( patch, 10 )\n\t};\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { type CKCdnVersion, isCKCdnTestingVersion } from '../cdn/ck/isCKCdnVersion.js';\nimport { destructureSemanticVersion } from '../utils/version/destructureSemanticVersion.js';\nimport type { LicenseKeyVersion } from './LicenseKey.js';\n\n/**\n * Returns the license version that is supported by the given CKEditor version.\n *\n * @param version The CKEditor version (semantic version or testing version).\n * @returns The supported license version.\n */\nexport function getLicenseVersionFromEditorVersion( version: CKCdnVersion ): LicenseKeyVersion {\n\t// Assume that the testing version is always the newest one\n\t// so we can return the highest supported license version.\n\tif ( isCKCdnTestingVersion( version ) ) {\n\t\treturn 3;\n\t}\n\n\tconst { major } = destructureSemanticVersion( version );\n\n\tswitch ( true ) {\n\t\tcase major >= 44:\n\t\t\treturn 3;\n\n\t\tcase major >= 38:\n\t\t\treturn 2;\n\n\t\tdefault:\n\t\t\treturn 1;\n\t}\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { BundleInstallationInfo } from './types.js';\n\nimport { isCKCdnVersion, type CKCdnVersion } from '../cdn/ck/isCKCdnVersion.js';\n\n/**\n * Returns information about the base CKEditor bundle installation.\n */\nexport function getCKBaseBundleInstallationInfo(): BundleInstallationInfo<CKCdnVersion> | null {\n\tconst { CKEDITOR_VERSION, CKEDITOR } = window;\n\n\tif ( !isCKCdnVersion( CKEDITOR_VERSION ) ) {\n\t\treturn null;\n\t}\n\n\t// Global `CKEDITOR` is set only in CDN builds.\n\treturn {\n\t\tsource: CKEDITOR ? 'cdn' : 'npm',\n\t\tversion: CKEDITOR_VERSION\n\t};\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { getLicenseVersionFromEditorVersion } from '../license/getLicenseVersionFromEditorVersion.js';\nimport type { LicenseKeyVersion } from '../license/LicenseKey.js';\n\nimport { getCKBaseBundleInstallationInfo } from './getCKBaseBundleInstallationInfo.js';\n\n/**\n * Returns information about the installed CKEditor version and the supported license version.\n *\n * @returns The supported license version or `null` if the CKEditor version is unknown.\n */\nexport function getSupportedLicenseVersionInstallationInfo(): LicenseKeyVersion | null {\n\tconst installationInfo = getCKBaseBundleInstallationInfo();\n\n\t// It looks like unknown version of Ckeditor is installed, so we can't determine the license version.\n\tif ( !installationInfo ) {\n\t\treturn null;\n\t}\n\n\treturn getLicenseVersionFromEditorVersion( installationInfo.version );\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { getSupportedLicenseVersionInstallationInfo } from '../installation-info/getSupportedLicenseVersionInstallationInfo.js';\nimport { expectType } from '../types/expectType.js';\n\nimport type { LicenseKey, LicenseKeyVersion } from './LicenseKey.js';\n\n/**\n * Checks if passed license key is a free CKEditor license key.\n *\n * @param licenseKey The license key to check.\n * @param licenseVersion The version of the license key.\n * @returns `true` if the license key is free, `false` otherwise.\n */\nexport function isCKEditorFreeLicense( licenseKey: LicenseKey, licenseVersion?: LicenseKeyVersion ): boolean {\n\t// Pick the license version from the installation info if it's not provided.\n\t// Version should be present somewhere in the window object.\n\tlicenseVersion ||= getSupportedLicenseVersionInstallationInfo() || undefined;\n\n\tswitch ( licenseVersion ) {\n\t\tcase 1:\n\t\tcase 2:\n\t\t\treturn licenseKey === undefined;\n\n\t\tcase 3:\n\t\t\treturn licenseKey === 'GPL';\n\n\t\tdefault: {\n\t\t\texpectType<undefined>( licenseVersion );\n\n\t\t\treturn false;\n\t\t}\n\t}\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { Editor, PluginConstructor } from 'ckeditor5';\nimport { isCKEditorFreeLicense } from '../license/isCKEditorFreeLicense.js';\n\n/**\n * Creates a plugin that collects usage data for a specific integration.\n *\n * This part of the code is not executed in open-source implementations using a GPL key.\n * It only runs when a specific license key is provided. If you are uncertain whether\n * this applies to your installation, please contact our support team.\n *\n * @param integrationName The name of the integration.\n * @param usageData The usage data for the integration.\n * @returns The plugin that collects the usage data.\n * @example\n * ```ts\n * import { createUsageDataPlugin } from './usage-data.plugin';\n *\n * const integrationUsageDataPlugin = createUsageDataPlugin( 'react', {\n * \tversion: '1.0.0',\n * \tframeworkVersion: '17.0.0'\n * } );\n *\n * const editor = ClassicEditor.create( document.querySelector( '#editor' ), {\n * \tplugins: [ integrationUsageDataPlugin ]\n * } );\n * ```\n */\nexport function createIntegrationUsageDataPlugin(\n\tintegrationName: string,\n\tusageData: IntegrationUsageData\n): IntegrationUsageDataPlugin {\n\treturn function IntegrationUsageDataPlugin( editor: Editor ) {\n\t\t/**\n\t\t * Do not collect usage data for integrations when using a free CKEditor license.\n\t\t */\n\t\tif ( isCKEditorFreeLicense( editor.config.get( 'licenseKey' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.on<IntegrationCollectUsageDataEvent>( 'collectUsageData', ( source, { setUsageData } ) => {\n\t\t\tsetUsageData( `integration.${ integrationName }`, usageData );\n\t\t} );\n\t} satisfies PluginConstructor;\n}\n\n/**\n * The plugin collects usage data for an integration.\n */\nexport type IntegrationUsageDataPlugin = ( editor: Editor ) => void;\n\n/**\n * The usage data for an integration.\n */\ntype IntegrationUsageData = {\n\n\t/**\n\t * The version of the integration.\n\t */\n\tversion: string;\n\n\t/**\n\t * The version of the framework that the integration is using.\n\t */\n\tframeworkVersion?: string;\n};\n\n/**\n * The event fires when the editor collects usage data for integrations.\n * The editor should fire it after the `ready` event so the integrations can provide their usage data.\n */\ntype IntegrationCollectUsageDataEvent = {\n\tname: 'collectUsageData';\n\targs: [\n\t\t{\n\t\t\tsetUsageData( path: `integration.${ string }`, value: IntegrationUsageData ): void;\n\t\t}\n\t];\n};\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { CKCdnVersion } from './isCKCdnVersion.js';\n\n/**\n * The URL of the CKEditor CDN.\n */\nexport const CK_CDN_URL = 'https://cdn.ckeditor.com';\n\n/**\n * Creates a URL to a file on the CKEditor CDN.\n *\n * @param bundle The name of the bundle.\n * @param file The name of the file.\n * @param version The version of the file.\n * @returns A function that accepts the version of the file and returns the URL.\n *\n * ```ts\n * const url = createCKCdnUrl( 'classic', 'ckeditor.js', '27.0.0' );\n *\n * expect( url ).to.be.equal( 'https://cdn.ckeditor.com/classic/27.0.0/ckeditor.js' );\n * ```\n */\nexport function createCKCdnUrl( bundle: string, file: string, version: CKCdnVersion ): string {\n\treturn `${ CK_CDN_URL }/${ bundle }/${ version }/${ file }`;\n}\n\n/**\n * A function that creates a URL to a file on the CKEditor CDN.\n */\nexport type CKCdnUrlCreator = typeof createCKCdnUrl;\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { SemanticVersion } from '../../utils/version/isSemanticVersion.js';\n\n/**\n * The URL of the CKBox CDN.\n */\nexport const CKBOX_CDN_URL = 'https://cdn.ckbox.io';\n\n/**\n * A version of a file on the CKBox CDN.\n */\nexport type CKBoxCdnVersion = SemanticVersion;\n\n/**\n * Creates a URL to a file on the CKBox CDN.\n *\n * @param bundle The name of the bundle.\n * @param file The name of the file.\n * @param version The version of the file.\n * @returns A function that accepts the version of the file and returns the URL.\n *\n * ```ts\n * const url = createCKBoxCdnUrl( 'ckbox', 'ckbox.js', '2.5.1' );\n *\n * expect( url ).to.be.equal( 'https://cdn.ckbox.io/ckbox/2.5.1/ckbox.js' );\n * ```\n */\nexport function createCKBoxCdnUrl( bundle: string, file: string, version: CKBoxCdnVersion ): string {\n\treturn `${ CKBOX_CDN_URL }/${ bundle }/${ version }/${ file }`;\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { SemanticVersion } from '../utils/version/isSemanticVersion.js';\n\nexport const CK_DOCS_URL = 'https://ckeditor.com/docs/ckeditor5';\n\n/**\n * Creates a URL to a file on the CKEditor documentation.\n */\nexport function createCKDocsUrl( path: string, version: SemanticVersion | 'latest' = 'latest' ): string {\n\treturn `${ CK_DOCS_URL }/${ version }/${ path }`;\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { CKCdnResourcesAdvancedPack } from '../../cdn/utils/loadCKCdnResourcesPack.js';\n\nimport { waitForWindowEntry } from '../../utils/waitForWindowEntry.js';\nimport { injectScriptsInParallel } from '../../utils/injectScript.js';\nimport { without } from '../../utils/without.js';\n\nimport { getCKBaseBundleInstallationInfo } from '../../installation-info/getCKBaseBundleInstallationInfo.js';\nimport { createCKDocsUrl } from '../../docs/createCKDocsUrl.js';\n\nimport { createCKCdnUrl, type CKCdnUrlCreator } from './createCKCdnUrl.js';\nimport type { CKCdnVersion } from './isCKCdnVersion.js';\n\nimport './globals.js';\n\n/**\n * Creates a pack of resources for the base CKEditor bundle.\n *\n * @param config The configuration of the CKEditor Premium Features pack.\n * @returns A pack of resources for  the base CKEditor bundle.\n * @example\n *\n * ```ts\n * const { Paragraph } = await loadCKCdnResourcesPack(\n * \tcreateCKCdnBaseBundlePack( {\n * \t\tversion: '44.0.0',\n * \t\ttranslations: [ 'es', 'de' ]\n * \t} )\n * );\n * ```\n */\nexport function createCKCdnBaseBundlePack(\n\t{\n\t\tversion,\n\t\ttranslations,\n\t\tcreateCustomCdnUrl = createCKCdnUrl\n\t}: CKCdnBaseBundlePackConfig\n): CKCdnResourcesAdvancedPack<Window['CKEDITOR']> {\n\tconst urls = {\n\t\tscripts: [\n\t\t\t// Load the main script of the base features.\n\t\t\tcreateCustomCdnUrl( 'ckeditor5', 'ckeditor5.umd.js', version ),\n\n\t\t\t// Load all JavaScript files from the base features.\n\t\t\t// EN bundle is prebuilt into the main script, so we don't need to load it separately.\n\t\t\t...without( [ 'en' ], translations || [] ).map( translation =>\n\t\t\t\tcreateCustomCdnUrl( 'ckeditor5', `translations/${ translation }.umd.js`, version )\n\t\t\t)\n\t\t],\n\n\t\tstylesheets: [\n\t\t\tcreateCustomCdnUrl( 'ckeditor5', 'ckeditor5.css', version )\n\t\t]\n\t};\n\n\treturn {\n\t\t// Preload resources specified in the pack, before loading the main script.\n\t\tpreload: [\n\t\t\t...urls.stylesheets,\n\t\t\t...urls.scripts\n\t\t],\n\n\t\tscripts: [\n\t\t\t// It's safe to load translations and the main script in parallel.\n\t\t\tasync attributes => injectScriptsInParallel( urls.scripts, attributes )\n\t\t],\n\n\t\t// Load all stylesheets of the base features.\n\t\tstylesheets: urls.stylesheets,\n\n\t\t// Pick the exported global variables from the window object.\n\t\tcheckPluginLoaded: async () =>\n\t\t\twaitForWindowEntry( [ 'CKEDITOR' ] ),\n\n\t\t// Check if the CKEditor base bundle is already loaded and throw an error if it is.\n\t\tbeforeInject: () => {\n\t\t\tconst installationInfo = getCKBaseBundleInstallationInfo();\n\n\t\t\tswitch ( installationInfo?.source ) {\n\t\t\t\tcase 'npm':\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'CKEditor 5 is already loaded from npm. Check the migration guide for more details: ' +\n\t\t\t\t\t\tcreateCKDocsUrl( 'updating/migration-to-cdn/vanilla-js.html' )\n\t\t\t\t\t);\n\n\t\t\t\tcase 'cdn':\n\t\t\t\t\tif ( installationInfo.version !== version ) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`CKEditor 5 is already loaded from CDN in version ${ installationInfo.version }. ` +\n\t\t\t\t\t\t\t`Remove the old <script> and <link> tags loading CKEditor 5 to allow loading the ${ version } version.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Configuration of the base CKEditor bundle pack.\n */\nexport type CKCdnBaseBundlePackConfig = {\n\n\t/**\n\t * The version of  the base CKEditor bundle.\n\t */\n\tversion: CKCdnVersion;\n\n\t/**\n\t * The list of translations to load.\n\t */\n\ttranslations?: Array<string>;\n\n\t/**\n\t * The function that creates custom CDN URLs.\n\t */\n\tcreateCustomCdnUrl?: CKCdnUrlCreator;\n};\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { CKCdnResourcesAdvancedPack } from '../../cdn/utils/loadCKCdnResourcesPack.js';\nimport type { CKCdnBaseBundlePackConfig } from './createCKCdnBaseBundlePack.js';\n\nimport { waitForWindowEntry } from '../../utils/waitForWindowEntry.js';\nimport { injectScriptsInParallel } from '../../utils/injectScript.js';\nimport { without } from '../../utils/without.js';\n\nimport { createCKCdnUrl } from './createCKCdnUrl.js';\n\n/**\n * Creates a pack of resources for the CKEditor Premium Features.\n *\n * @param config The configuration of the CKEditor Premium Features pack.\n * @returns A pack of resources for the CKEditor Premium Features.\n * @example\n *\n * ```ts\n * const { SlashCommand } = await loadCKCdnResourcesPack(\n * \tcreateCKCdnPremiumBundlePack( {\n * \t\tversion: '44.0.0',\n * \t\ttranslations: [ 'es', 'de' ]\n * \t} )\n * );\n * ```\n */\nexport function createCKCdnPremiumBundlePack(\n\t{\n\t\tversion,\n\t\ttranslations,\n\t\tcreateCustomCdnUrl = createCKCdnUrl\n\t}: CKCdnPremiumBundlePackConfig\n): CKCdnResourcesAdvancedPack<Window['CKEDITOR_PREMIUM_FEATURES']> {\n\tconst urls = {\n\t\tscripts: [\n\t\t\t// Load the main script of the premium features.\n\t\t\tcreateCustomCdnUrl( 'ckeditor5-premium-features', 'ckeditor5-premium-features.umd.js', version ),\n\n\t\t\t// Load all JavaScript files from the premium features.\n\t\t\t// EN bundle is prebuilt into the main script, so we don't need to load it separately.\n\t\t\t...without( [ 'en' ], translations || [] ).map( translation =>\n\t\t\t\tcreateCustomCdnUrl( 'ckeditor5-premium-features', `translations/${ translation }.umd.js`, version )\n\t\t\t)\n\t\t],\n\n\t\tstylesheets: [\n\t\t\tcreateCustomCdnUrl( 'ckeditor5-premium-features', 'ckeditor5-premium-features.css', version )\n\t\t]\n\t};\n\n\treturn {\n\t\t// Preload resources specified in the pack, before loading the main script.\n\t\tpreload: [\n\t\t\t...urls.stylesheets,\n\t\t\t...urls.scripts\n\t\t],\n\n\t\tscripts: [\n\t\t\t// It's safe to load translations and the main script in parallel.\n\t\t\tasync attributes => injectScriptsInParallel( urls.scripts, attributes )\n\t\t],\n\n\t\t// Load all stylesheets of the premium features.\n\t\tstylesheets: urls.stylesheets,\n\n\t\t// Pick the exported global variables from the window object.\n\t\tcheckPluginLoaded: async () =>\n\t\t\twaitForWindowEntry( [ 'CKEDITOR_PREMIUM_FEATURES' ] )\n\t};\n}\n\n/**\n * Configuration of the CKEditor Premium Features pack.\n */\nexport type CKCdnPremiumBundlePackConfig = Pick<\n\tCKCdnBaseBundlePackConfig,\n\t'translations' | 'version' | 'createCustomCdnUrl'\n>;\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { Awaitable } from '../../types/Awaitable.js';\n\nimport { injectScript, type InjectScriptProps } from '../../utils/injectScript.js';\nimport { injectStylesheet } from '../../utils/injectStylesheet.js';\nimport { preloadResource } from '../../utils/preloadResource.js';\nimport { uniq } from '../../utils/uniq.js';\n\n/**\n * Loads pack of resources (scripts and stylesheets) and returns the exported global variables (if any).\n *\n * @param pack The pack of resources to load.\n * @returns A promise that resolves with the exported global variables.\n * @example\n *\n * ```ts\n * const ckeditor = await loadCKCdnResourcesPack<ClassicEditor>( {\n * \tscripts: [\n * \t\t'https://cdn.ckeditor.com/ckeditor5/30.0.0/classic/ckeditor.js'\n * \t],\n * \tcheckPluginLoaded: () => ( window as any ).ClassicEditor\n * } );\n * ```\n */\nexport async function loadCKCdnResourcesPack<P extends CKCdnResourcesPack<any>>( pack: P ): Promise<InferCKCdnResourcesPackExportsType<P>> {\n\tlet {\n\t\thtmlAttributes = {},\n\t\tscripts = [],\n\t\tstylesheets = [],\n\t\tpreload,\n\t\tbeforeInject,\n\t\tcheckPluginLoaded\n\t} = normalizeCKCdnResourcesPack( pack );\n\n\t// Execute the `beforeInject` callback if defined. It checks if the resources are already loaded.\n\tbeforeInject?.();\n\n\t// If preload is not defined, use all stylesheets and scripts as preload resources.\n\tif ( !preload ) {\n\t\tpreload = uniq( [\n\t\t\t...stylesheets.filter( item => typeof item === 'string' ),\n\t\t\t...scripts.filter( item => typeof item === 'string' )\n\t\t] );\n\t}\n\n\t// Preload resources specified in the pack.\n\tfor ( const url of preload ) {\n\t\tpreloadResource( url, {\n\t\t\tattributes: htmlAttributes\n\t\t} );\n\t}\n\n\t// Load stylesheet tags before scripts to avoid a flash of unstyled content.\n\tawait Promise.all(\n\t\tuniq( stylesheets ).map( href => injectStylesheet( {\n\t\t\thref,\n\t\t\tattributes: htmlAttributes,\n\t\t\tplacementInHead: 'start'\n\t\t} ) )\n\t);\n\n\t// Load script tags.\n\tfor ( const script of uniq( scripts ) ) {\n\t\tconst injectorProps: InjectScriptProps = {\n\t\t\tattributes: htmlAttributes\n\t\t};\n\n\t\tif ( typeof script === 'string' ) {\n\t\t\tawait injectScript( script, injectorProps );\n\t\t} else {\n\t\t\tawait script( injectorProps );\n\t\t}\n\t}\n\n\t// Wait for execution all injected scripts.\n\treturn checkPluginLoaded?.();\n}\n\n/**\n * Normalizes the CKCdnResourcesPack configuration to the advanced format.\n *\n * @param pack The pack of resources to normalize.\n * @returns The normalized pack of resources.\n */\nexport function normalizeCKCdnResourcesPack<R = any>( pack: CKCdnResourcesPack<R> ): CKCdnResourcesAdvancedPack<R> {\n\t// Check if it is array of URLs, if so, convert it to the advanced format.\n\tif ( Array.isArray( pack ) ) {\n\t\treturn {\n\t\t\tscripts: pack.filter(\n\t\t\t\titem => typeof item === 'function' || item.endsWith( '.js' )\n\t\t\t),\n\n\t\t\tstylesheets: pack.filter(\n\t\t\t\titem => item.endsWith( '.css' )\n\t\t\t)\n\t\t};\n\t}\n\n\t// Check if it is a local import function, if so, convert it to the advanced format.\n\tif ( typeof pack === 'function' ) {\n\t\treturn {\n\t\t\tcheckPluginLoaded: pack\n\t\t};\n\t}\n\n\t// Return the pack as it is, because it's already in the advanced format.\n\treturn pack;\n}\n\n/**\n * A pack of resources to load (scripts and stylesheets) and the exported global variables.\n */\nexport type CKCdnResourcesPack<R = any> =\n\t| CKCdnResourcesAdvancedPack<R>\n\t| CKCdnResourcesBasicUrlsPack\n\t| CKCdnResourcesLocalPack<R>;\n\n/**\n * A pack of resources to load as an async function that results with UMD module.\n *\n * @example\n * ```ts\n * const pack = async () => import( './your-module' );\n * ```\n */\ntype CKCdnResourcesLocalPack<R> = () => Awaitable<R>;\n\n/**\n * A pack of resources to load (scripts and stylesheets). In such configuration, the exported global variable\n * might be available but it's not guaranteed.\n *\n * @example\n * ```ts\n * const pack = [\n * \t'https://cdn.ckeditor.com/ckeditor5/30.0.0/classic/ckeditor.js'\n * ];\n * ```\n */\ntype CKCdnResourcesBasicUrlsPack = Array<string>;\n\n/**\n * A pack of resources to load (scripts and stylesheets) and the exported global variables.\n *\n * @example\n * ```ts\n * const pack = {\n * \tscripts: [\n * \t\t'https://cdn.ckeditor.com/ckeditor5/30.0.0/classic/ckeditor.js'\n * \t],\n * \tcheckPluginLoaded: () => ( window as any ).ClassicEditor\n * };\n * ```\n */\nexport type CKCdnResourcesAdvancedPack<R> = {\n\n\t/**\n\t * List of resources to preload, it should improve the performance of loading the resources.\n\t */\n\tpreload?: Array<string>;\n\n\t/**\n\t * List of scripts to load. Scripts are loaded in the order they are defined.\n\t */\n\tscripts?: Array<string | CKCdnScriptInjectorCallback>;\n\n\t/**\n\t * List of stylesheets to load. Stylesheets are loaded in the order they are defined.\n\t */\n\tstylesheets?: Array<string>;\n\n\t/**\n\t * Map of attributes to add to the script, stylesheet and link tags.\n\t * It can be used to specify `crossorigin` or `nonce` attributes on the injected HTML elements.\n\t */\n\thtmlAttributes?: Record<string, any>;\n\n\t/**\n\t * Callback that is executed before injecting the resources. It can be used to verify if the resources are already loaded.\n\t */\n\tbeforeInject?: () => void;\n\n\t/**\n\t * Get JS object with global variables exported by scripts.\n\t */\n\tcheckPluginLoaded?: () => Awaitable<R>;\n};\n\n/**\n * Callback that injects a script tag into the document.\n */\ntype CKCdnScriptInjectorCallback = ( props: InjectScriptProps ) => Awaitable<unknown> ;\n\n/**\n * Extracts the type of the exported global variables from a CKResourcesPack.\n */\nexport type InferCKCdnResourcesPackExportsType<P> = P extends CKCdnResourcesPack<infer R> ? R : never;\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { filterBlankObjectValues } from '../../utils/filterBlankObjectValues.js';\nimport { mapObjectValues } from '../../utils/mapObjectValues.js';\n\nimport {\n\tnormalizeCKCdnResourcesPack,\n\ttype CKCdnResourcesPack,\n\ttype InferCKCdnResourcesPackExportsType,\n\ttype CKCdnResourcesAdvancedPack\n} from './loadCKCdnResourcesPack.js';\n\n/**\n * Combines multiple CKEditor CDN bundles packs into a single pack.\n *\n * @param packs A map of CKEditor CDN bundles packs.\n * @returns A combined pack of resources for multiple CKEditor CDN bundles.\n * @example\n *\n * ```ts\n * const { Base, Premium } = await loadCKCdnResourcesPack(\n * \tcombineCKCdnBundlesPacks( {\n * \t\tBase: createCKCdnBaseBundlePack( {\n * \t\t\tversion: '44.0.0',\n * \t\t\ttranslations: [ 'es', 'de' ]\n * \t\t} ),\n * \t\tPremium: createCKCdnPremiumBundlePack( {\n * \t\t\tversion: '44.0.0',\n * \t\t\ttranslations: [ 'es', 'de' ]\n * \t\t} )\n * \t} )\n * );\n * ```\n */\nexport function combineCKCdnBundlesPacks<P extends CKCdnBundlesPacks>( packs: P ): CKCdnCombinedBundlePack<P> {\n\tconst normalizedPacks = mapObjectValues(\n\t\tfilterBlankObjectValues( packs ),\n\t\tnormalizeCKCdnResourcesPack\n\t);\n\n\t// Merge all scripts, stylesheets and preload resources from all packs.\n\tconst mergedPacks = Object\n\t\t.values( normalizedPacks )\n\t\t.reduce(\n\t\t\t( acc, pack ) => {\n\t\t\t\tacc.scripts!.push( ...( pack.scripts ?? [] ) );\n\t\t\t\tacc.stylesheets!.push( ...( pack.stylesheets ?? [] ) );\n\t\t\t\tacc.preload!.push( ...( pack.preload ?? [] ) );\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t{\n\t\t\t\tpreload: [],\n\t\t\t\tscripts: [],\n\t\t\t\tstylesheets: []\n\t\t\t}\n\t\t);\n\n\t// Get exported entries from all packs.\n\tconst checkPluginLoaded = async () => {\n\t\t// Use Object.create() to create an object without a prototype to avoid prototype pollution.\n\t\tconst exportedGlobalVariables: Record<string, unknown> = Object.create( null );\n\n\t\t// It can be done sequentially because scripts *should* be loaded at this point and the whole execution should be quite fast.\n\t\tfor ( const [ name, pack ] of Object.entries( normalizedPacks ) ) {\n\t\t\texportedGlobalVariables[ name ] = await pack?.checkPluginLoaded?.();\n\t\t}\n\n\t\treturn exportedGlobalVariables as any;\n\t};\n\n\t// Call beforeInject method of all packs.\n\tconst beforeInject = () => {\n\t\tfor ( const pack of Object.values( normalizedPacks ) ) {\n\t\t\tpack.beforeInject?.();\n\t\t}\n\t};\n\n\treturn {\n\t\t...mergedPacks,\n\t\tbeforeInject,\n\t\tcheckPluginLoaded\n\t};\n}\n\n/**\n * A map of CKEditor CDN bundles packs.\n */\nexport type CKCdnBundlesPacks = Record<string, CKCdnResourcesPack<any> | undefined>;\n\n/**\n * A combined pack of resources for multiple CKEditor CDN bundles.\n */\nexport type CKCdnCombinedBundlePack<P extends CKCdnBundlesPacks> = CKCdnResourcesAdvancedPack<{\n\t[ K in keyof P ]: InferCKCdnResourcesPackExportsType<P[K]>\n}>;\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { BundleInstallationInfo } from './types.js';\n\nimport { isSemanticVersion } from '../utils/version/isSemanticVersion.js';\n\n/**\n * Returns information about the CKBox installation.\n */\nexport function getCKBoxInstallationInfo(): BundleInstallationInfo | null {\n\tconst version = window.CKBox?.version;\n\n\tif ( !isSemanticVersion( version ) ) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\tsource: 'cdn',\n\t\tversion\n\t};\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { waitForWindowEntry } from '../../utils/waitForWindowEntry.js';\nimport { without } from '../../utils/without.js';\nimport { getCKBoxInstallationInfo } from '../../installation-info/getCKBoxInstallationInfo.js';\n\nimport type { CKCdnResourcesAdvancedPack } from '../../cdn/utils/loadCKCdnResourcesPack.js';\nimport { createCKBoxCdnUrl, type CKBoxCdnVersion } from './createCKBoxCdnUrl.js';\n\nimport './globals.js';\n\n/**\n * Creates a pack of resources for the base CKBox bundle.\n *\n * @param config The configuration of the CKBox bundle pack.\n * @returns A pack of resources for the base CKBox bundle.\n * @example\n * ```ts\n * const { CKBox } = await loadCKCdnResourcesPack(\n * \tcreateCKBoxCdnBundlePack( {\n * \t\tversion: '2.5.1',\n * \t\ttheme: 'lark'\n * \t} )\n * );\n * ```\n */\nexport function createCKBoxBundlePack(\n\t{\n\t\tversion,\n\t\ttheme = 'lark',\n\t\ttranslations,\n\t\tcreateCustomCdnUrl = createCKBoxCdnUrl\n\t}: CKBoxCdnBundlePackConfig\n): CKCdnResourcesAdvancedPack<Window['CKBox']> {\n\treturn {\n\t\t// Load the main script of the base features.\n\t\tscripts: [\n\t\t\tcreateCustomCdnUrl( 'ckbox', 'ckbox.js', version ),\n\n\t\t\t// EN bundle is prebuilt into the main script, so we don't need to load it separately.\n\t\t\t...without( [ 'en' ], translations || [] ).map( translation =>\n\t\t\t\tcreateCustomCdnUrl( 'ckbox', `translations/${ translation }.js`, version )\n\t\t\t)\n\t\t],\n\n\t\t// Load optional theme, if provided. It's not required but recommended because it improves the look and feel.\n\t\t...theme && {\n\t\t\tstylesheets: [\n\t\t\t\tcreateCustomCdnUrl( 'ckbox', `styles/themes/${ theme }.css`, version )\n\t\t\t]\n\t\t},\n\n\t\t// Pick the exported global variables from the window object.\n\t\tcheckPluginLoaded: async () =>\n\t\t\twaitForWindowEntry( [ 'CKBox' ] ),\n\n\t\t// Check if the CKBox bundle is already loaded and throw an error if it is.\n\t\tbeforeInject: () => {\n\t\t\tconst installationInfo = getCKBoxInstallationInfo();\n\n\t\t\tif ( installationInfo && installationInfo.version !== version ) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`CKBox is already loaded from CDN in version ${ installationInfo.version }. ` +\n\t\t\t\t\t`Remove the old <script> and <link> tags loading CKBox to allow loading the ${ version } version.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Configuration of the base CKEditor bundle pack.\n */\nexport type CKBoxCdnBundlePackConfig = {\n\n\t/**\n\t * The version of  the base CKEditor bundle.\n\t */\n\tversion: CKBoxCdnVersion;\n\n\t/**\n\t * The list of translations to load.\n\t */\n\ttranslations?: Array<string>;\n\n\t/**\n\t * The theme of the CKBox bundle. Default is 'lark'.\n\t */\n\ttheme?: string | null;\n\n\t/**\n\t * Function that creates a custom URL for the CKBox bundle.\n\t */\n\tcreateCustomCdnUrl?: typeof createCKBoxCdnUrl;\n};\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { destructureSemanticVersion } from '../utils/version/destructureSemanticVersion.js';\nimport { isCKCdnTestingVersion, type CKCdnVersion } from '../cdn/ck/isCKCdnVersion.js';\nimport { getLicenseVersionFromEditorVersion } from './getLicenseVersionFromEditorVersion.js';\n\n/**\n * Checks if the CKEditor CDN is supported by the given editor version.\n *\n * @param version The CKEditor version.\n * @returns `true` if the CDN is supported, `false` otherwise.\n */\nexport function isCKCdnSupportedByEditorVersion( version: CKCdnVersion ): boolean {\n\tif ( isCKCdnTestingVersion( version ) ) {\n\t\treturn true;\n\t}\n\n\tconst { major } = destructureSemanticVersion( version );\n\tconst licenseVersion = getLicenseVersionFromEditorVersion( version );\n\n\tswitch ( licenseVersion ) {\n\t\t// For newer license versions, we support all newer versions.\n\t\tcase 3:\n\t\t\treturn true;\n\n\t\t// For the license v1-v2, we support only the 43 version.\n\t\tdefault:\n\t\t\treturn major === 43;\n\t}\n}\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { mapObjectValues } from '../../utils/mapObjectValues.js';\nimport { waitForWindowEntry } from '../../utils/waitForWindowEntry.js';\n\nimport {\n\tnormalizeCKCdnResourcesPack,\n\ttype InferCKCdnResourcesPackExportsType,\n\ttype CKCdnResourcesAdvancedPack\n} from '../utils/loadCKCdnResourcesPack.js';\n\nimport {\n\tcombineCKCdnBundlesPacks,\n\ttype CKCdnBundlesPacks\n} from '../utils/combineCKCdnBundlesPacks.js';\n\n/**\n * This function is similar to `combineCKCdnBundlesPacks` but it provides global scope\n * fallback for the plugins that do not define the type of the exported entries. In other\n * words if the plugin `Reader` does not define the type of the exported entries, the type\n * will be picked from the `Window[ 'Reader' ]` object.\n *\n * @param pluginsPacks A map of CKEditor plugins packs.\n * @returns A combined pack of resources for multiple CKEditor plugins.\n * @example\n *\n * ```ts\n * const { ScreenReader, AccessibilityChecker } = await loadCKCdnResourcesPack(\n * \tcombineCdnPluginsPacks( {\n * \t\tScreenReader: [ 'https://example.org/screen-reader.js' ],\n * \t\tAccessibilityChecker: [ 'https://example.org/accessibility-checker.js' ]\n * \t} )\n * );\n * ```\n *\n * In example above, `ScreenReader` and `AccessibilityChecker` are the plugins names and\n * the type of the exported entries will be picked from the global (Window) scope.\n */\nexport function combineCdnPluginsPacks<Plugins extends CdnPluginsPacks>(\n\tpluginsPacks: Plugins\n): CombinedPluginsPackWithFallbackScope<Plugins> {\n\tconst normalizedPluginsPacks = mapObjectValues( pluginsPacks, ( pluginPack, pluginName ) => {\n\t\tif ( !pluginPack ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst normalizedPluginPack = normalizeCKCdnResourcesPack( pluginPack );\n\n\t\treturn {\n\t\t\t// Provide default window accessor object if the plugin pack does not define it.\n\t\t\tcheckPluginLoaded: async (): Promise<unknown> =>\n\t\t\t\twaitForWindowEntry( [ pluginName as any ] ),\n\n\t\t\t// Transform the plugin pack to a normalized advanced pack.\n\t\t\t...normalizedPluginPack\n\t\t};\n\t} );\n\n\t// Merge all scripts, stylesheets and preload resources from all packs.\n\treturn combineCKCdnBundlesPacks(\n\t\tnormalizedPluginsPacks\n\t) as CombinedPluginsPackWithFallbackScope<Plugins>;\n}\n\n/**\n * A map of CKEditor plugins packs.\n */\nexport type CdnPluginsPacks = CKCdnBundlesPacks;\n\n/**\n * A combined pack of plugins. It picks the type of the plugin from the global scope if\n * `CKCdnCombinedBundlePack` does not define it in the `checkPluginLoaded` method.\n */\nexport type CombinedPluginsPackWithFallbackScope<P extends CdnPluginsPacks> = CKCdnResourcesAdvancedPack<{\n\t[ K in keyof P ]: FallbackIfUnknown<\n\t\tInferCKCdnResourcesPackExportsType<P[K]>,\n\t\tK extends keyof Window ? Window[ K ] : unknown\n\t>;\n}>;\n\n/**\n * Returns the fallback type if the provided type is unknown.\n */\ntype FallbackIfUnknown<T, Fallback> = unknown extends T ? Fallback : T;\n", "/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { createCKCdnBaseBundlePack } from './ck/createCKCdnBaseBundlePack.js';\nimport { createCKCdnPremiumBundlePack } from './ck/createCKCdnPremiumBundlePack.js';\n\nimport { combineCKCdnBundlesPacks } from './utils/combineCKCdnBundlesPacks.js';\nimport {\n\tcreateCKBoxBundlePack,\n\ttype CKBoxCdnBundlePackConfig\n} from './ckbox/createCKBoxCdnBundlePack.js';\n\nimport type { CKCdnUrlCreator } from './ck/createCKCdnUrl.js';\nimport type { ConditionalBlank } from '../types/ConditionalBlank.js';\n\nimport { isCKCdnSupportedByEditorVersion } from '../license/isCKCdnSupportedByEditorVersion.js';\nimport { isCKCdnTestingVersion, type CKCdnVersion } from './ck/isCKCdnVersion.js';\n\nimport {\n\tloadCKCdnResourcesPack,\n\ttype InferCKCdnResourcesPackExportsType\n} from './utils/loadCKCdnResourcesPack.js';\n\nimport {\n\tcombineCdnPluginsPacks,\n\ttype CombinedPluginsPackWithFallbackScope,\n\ttype CdnPluginsPacks\n} from './plugins/combineCdnPluginsPacks.js';\n\n/**\n * A composable function that loads CKEditor Cloud Services bundles.\n * It returns the exports of the loaded bundles.\n *\n * @param config The configuration of the CKEditor Cloud Services bundles to load.\n * @returns The result of the loaded CKEditor Cloud Services bundles.\n * @example\n *\n * Example of loading CKEditor Cloud Services with the premium features and CKBox:\n *\n * ```ts\n * const { CKEditor, CKEditorPremiumFeatures } = await loadCKEditorCloud( {\n * \tversion: '44.0.0',\n * \ttranslations: [ 'es', 'de' ],\n * \tpremium: true\n * } );\n *\n * const { Paragraph } = CKEditor;\n * const { SlashCommands } = CKEditorPremiumFeatures;\n * ```\n *\n * Example of loading CKEditor Cloud Services with custom plugins:\n *\n * ```ts\n * const { CKEditor, loadedPlugins } = await loadCKEditorCloud( {\n * \tversion: '44.0.0',\n * \tplugins: {\n * \t\tPlugin1: async () => import( './your-local-import.umd.js' ),\n * \t\tPlugin2: [\n * \t\t\t'https://cdn.example.com/plugin2.js',\n * \t\t\t'https://cdn.example.com/plugin2.css'\n * \t\t],\n * \t\tPlugin3: {\n * \t\t\tscripts: [ 'https://cdn.example.com/plugin3.js' ],\n * \t\t\tstylesheets: [ 'https://cdn.example.com/plugin3.css' ],\n *\n * \t\t\t// Optional, if it's not passed then the type of `Plugin3` will be picked from `Window`\n * \t\t\tcheckPluginLoaded: () => ( window as any ).Plugin3\n * \t\t}\n * \t}\n * } );\n * ```\n *\n * Type of plugins can be inferred if `checkPluginLoaded` is not provided: In this case,\n * the type of the plugin will be picked from the global window scope.\n */\nexport function loadCKEditorCloud<Config extends CKEditorCloudConfig>(\n\tconfig: Config\n): Promise<CKEditorCloudResult<Config>> {\n\tconst {\n\t\tversion, translations, plugins,\n\t\tpremium, ckbox, createCustomCdnUrl,\n\t\tinjectedHtmlElementsAttributes = {\n\t\t\tcrossorigin: 'anonymous'\n\t\t}\n\t} = config;\n\n\tvalidateCKEditorVersion( version );\n\n\tconst pack = combineCKCdnBundlesPacks( {\n\t\tCKEditor: createCKCdnBaseBundlePack( {\n\t\t\tversion,\n\t\t\ttranslations,\n\t\t\tcreateCustomCdnUrl\n\t\t} ),\n\n\t\t...premium && {\n\t\t\tCKEditorPremiumFeatures: createCKCdnPremiumBundlePack( {\n\t\t\t\tversion,\n\t\t\t\ttranslations,\n\t\t\t\tcreateCustomCdnUrl\n\t\t\t} )\n\t\t},\n\n\t\t...ckbox && {\n\t\t\tCKBox: createCKBoxBundlePack( ckbox )\n\t\t},\n\n\t\tloadedPlugins: combineCdnPluginsPacks( plugins ?? {} )\n\t} );\n\n\treturn loadCKCdnResourcesPack(\n\t\t{\n\t\t\t...pack,\n\t\t\thtmlAttributes: injectedHtmlElementsAttributes\n\t\t}\n\t) as Promise<CKEditorCloudResult<Config>>;\n}\n\n/**\n * Checks if the CKEditor Cloud Services support the given CKEditor 5 version.\n *\n * @param version The CKEditor version to validate.\n */\nfunction validateCKEditorVersion( version: CKCdnVersion ) {\n\tif ( isCKCdnTestingVersion( version ) ) {\n\t\tconsole.warn(\n\t\t\t'You are using a testing version of CKEditor 5. Please remember that it is not suitable for production environments.'\n\t\t);\n\t}\n\n\tif ( !isCKCdnSupportedByEditorVersion( version ) ) {\n\t\tthrow new Error(\n\t\t\t`The CKEditor 5 CDN can't be used with the given editor version: ${ version }. ` +\n\t\t\t'Please make sure you are using at least the CKEditor 5 version 44.'\n\t\t);\n\t}\n}\n\n/**\n * The result of the resolved bundles from CKEditor CDN.\n */\nexport type CKEditorCloudResult<Config extends CKEditorCloudConfig> = {\n\n\t/**\n\t * The base CKEditor bundle exports.\n\t */\n\tCKEditor: NonNullable<Window['CKEDITOR']>;\n\n\t/**\n\t * The CKBox bundle exports.\n\t * It's available only if the `ckbox` configuration is provided.\n\t */\n\tCKBox: ConditionalBlank<\n\t\tConfig['ckbox'],\n\t\tWindow['CKBox']\n\t>;\n\n\t/**\n\t * The CKEditor Premium Features bundle exports.\n\t * It's available only if the `premium` configuration is provided.\n\t */\n\tCKEditorPremiumFeatures: ConditionalBlank<\n\t\tConfig['premium'],\n\t\tWindow['CKEDITOR_PREMIUM_FEATURES']\n\t>;\n\n\t/**\n\t * The additional resources exports.\n\t */\n\tloadedPlugins: InferCKCdnResourcesPackExportsType<\n\t\tCombinedPluginsPackWithFallbackScope<NonNullable<Config['plugins']>>\n\t>;\n};\n\n/**\n * The configuration of the `useCKEditorCloud` hook.\n */\nexport type CKEditorCloudConfig<Plugins extends CdnPluginsPacks = CdnPluginsPacks> = {\n\n\t/**\n\t * The version of CKEditor Cloud Services to use.\n\t */\n\tversion: CKCdnVersion;\n\n\t/**\n\t * The translations to load.\n\t */\n\ttranslations?: Array<string>;\n\n\t/**\n\t * If `true` then the premium features will be loaded.\n\t */\n\tpremium?: boolean;\n\n\t/**\n\t * CKBox bundle configuration.\n\t */\n\tckbox?: CKBoxCdnBundlePackConfig;\n\n\t/**\n\t * Additional resources to load.\n\t */\n\tplugins?: Plugins;\n\n\t/**\n\t * Map of attributes to add to the script, stylesheet and link tags that are injected by the loader.\n\t */\n\tinjectedHtmlElementsAttributes?: Record<string, any>;\n\n\t/**\n\t * The function that creates custom CDN URLs.\n\t */\n\tcreateCustomCdnUrl?: CKCdnUrlCreator;\n};\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport { version } from 'vue';\n\nimport { createIntegrationUsageDataPlugin } from '@ckeditor/ckeditor5-integrations-common';\n\n/**\n * This part of the code is not executed in open-source implementations using a GPL key.\n * It only runs when a specific license key is provided. If you are uncertain whether\n * this applies to your installation, please contact our support team.\n */\nexport const VueIntegrationUsageDataPlugin = createIntegrationUsageDataPlugin(\n\t'vue',\n\t{\n\t\tversion: __VUE_INTEGRATION_VERSION__,\n\t\tframeworkVersion: version\n\t}\n);\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport { appendExtraPluginsToEditorConfig, isCKEditorFreeLicense } from '@ckeditor/ckeditor5-integrations-common';\nimport type { EditorConfig } from 'ckeditor5';\n\nimport { VueIntegrationUsageDataPlugin } from './VueIntegrationUsageDataPlugin.js';\n\n/**\n * Appends all integration plugins to the editor configuration.\n *\n * @param editorConfig The editor configuration.\n * @returns The editor configuration with all integration plugins appended.\n */\nexport function appendAllIntegrationPluginsToConfig( editorConfig: EditorConfig ): EditorConfig {\n\t/**\n\t * Do not modify the editor configuration if the editor is using a free license.\n\t */\n\tif ( isCKEditorFreeLicense( editorConfig.licenseKey ) ) {\n\t\treturn editorConfig;\n\t}\n\n\treturn appendExtraPluginsToEditorConfig( editorConfig, [\n\t\t/**\n\t\t * This part of the code is not executed in open-source implementations using a GPL key.\n\t\t * It only runs when a specific license key is provided. If you are uncertain whether\n\t\t * this applies to your installation, please contact our support team.\n\t\t */\n\t\tVueIntegrationUsageDataPlugin\n\t] );\n}\n", "<template>\n  <component\n    :is=\"tagName\"\n    ref=\"element\"\n  />\n</template>\n\n<script\n\tsetup\n\tlang=\"ts\"\n\tgeneric=\"TEditor extends { create( ...args: any[] ): Promise<Editor> }\"\n>\nimport { debounce } from 'lodash-es';\nimport {\n\tref,\n\twatch,\n\tmarkRaw,\n\tonMounted,\n\tonBeforeUnmount\n} from 'vue';\nimport type { Editor, EditorConfig, EventInfo } from 'ckeditor5';\nimport type { Props, ExtractEditorType } from './types.js';\n\nimport { appendAllIntegrationPluginsToConfig } from './plugins/appendAllIntegrationPluginsToConfig.js';\n\ntype EditorType = ExtractEditorType<TEditor>;\n\ndefineOptions( {\n\tname: 'CKEditor'\n} );\n\nconst model = defineModel( 'modelValue', { type: String, default: '' } );\n\nconst props = withDefaults( defineProps<Props<TEditor>>(), {\n\tconfig: () => ( {} ),\n\ttagName: 'div',\n\tdisabled: false,\n\tdisableTwoWayDataBinding: false\n} );\n\nconst emit = defineEmits<{\n\tready: [ editor: EditorType ],\n\tdestroy: [],\n\tblur: [ event: EventInfo, editor: EditorType ],\n\tfocus: [ event: EventInfo, editor: EditorType ],\n\tinput: [ data: string, event: EventInfo, editor: EditorType ],\n\t'update:modelValue': [ data: string, event: EventInfo, editor: EditorType ],\n}>();\n\nconst VUE_INTEGRATION_READ_ONLY_LOCK_ID = 'Lock from Vue integration (@ckeditor/ckeditor5-vue)';\nconst INPUT_EVENT_DEBOUNCE_WAIT = 300;\n\nconst element = ref<HTMLElement>();\nconst instance = ref<EditorType>();\nconst lastEditorData = ref<string>();\n\ndefineExpose( {\n\tinstance,\n\tlastEditorData\n} );\n\nwatch( model, newModel => {\n\t// Synchronize changes of #modelValue. There are two sources of changes:\n\t//\n\t//                External modelValue change      ──────╮\n\t//                                                      ╰─────> ┏━━━━━━━━━━━┓\n\t//                                                              ┃ Component ┃\n\t//                                                      ╭─────> ┗━━━━━━━━━━━┛\n\t//                   Internal data change         ──────╯\n\t//             (typing, commands, collaboration)\n\t//\n\t// Case 1: If the change was external (via props), the editor data must be synced with\n\t// the component using instance#setData() and it is OK to destroy the selection.\n\t//\n\t// Case 2: If the change is the result of internal data change, the #modelValue is the\n\t// same as this.lastEditorData, which has been cached on #change:data. If we called\n\t// instance#setData() at this point, that would demolish the selection.\n\t//\n\t// To limit the number of instance#setData() which is time-consuming when there is a\n\t// lot of data we make sure:\n\t//    * the new modelValue is at least different than the old modelValue (Case 1.)\n\t//    * the new modelValue is different than the last internal instance state (Case 2.)\n\t//\n\t// See: https://github.com/ckeditor/ckeditor5-vue/issues/42.\n\tif ( instance.value && newModel !== lastEditorData.value ) {\n\t\tinstance.value.data.set( newModel );\n\t}\n} );\n\nwatch( () => props.disabled, readOnlyMode => {\n\tif ( readOnlyMode ) {\n\t\tinstance.value!.enableReadOnlyMode( VUE_INTEGRATION_READ_ONLY_LOCK_ID );\n\t} else {\n\t\tinstance.value!.disableReadOnlyMode( VUE_INTEGRATION_READ_ONLY_LOCK_ID );\n\t}\n} );\n\nfunction checkVersion(): void {\n\tconst version = window.CKEDITOR_VERSION;\n\n\tif ( !version ) {\n\t\treturn console.warn( 'Cannot find the \"CKEDITOR_VERSION\" in the \"window\" scope.' );\n\t}\n\n\tconst [ major ] = version.split( '.' ).map( Number );\n\n\tif ( major >= 42 || version.startsWith( '0.0.0' ) ) {\n\t\treturn;\n\t}\n\n\tconsole.warn( 'The <CKEditor> component requires using CKEditor 5 in version 42+ or nightly build.' );\n}\n\nfunction setUpEditorEvents( editor: EditorType ) {\n\t// Use the leading edge so the first event in the series is emitted immediately.\n\t// Failing to do so leads to race conditions, for instance, when the component modelValue\n\t// is set twice in a time span shorter than the debounce time.\n\t// See https://github.com/ckeditor/ckeditor5-vue/issues/149.\n\tconst emitDebouncedInputEvent = debounce( ( evt: EventInfo ) => {\n\t\tif ( props.disableTwoWayDataBinding ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Cache the last editor data. This kind of data is a result of typing,\n\t\t// editor command execution, collaborative changes to the document, etc.\n\t\t// This data is compared when the component modelValue changes in a 2-way binding.\n\t\tconst data = lastEditorData.value = editor.data.get();\n\n\t\t// The compatibility with the v-model and general Vue.js concept of input–like components.\n\t\temit( 'update:modelValue', data, evt, editor );\n\t\temit( 'input', data, evt, editor );\n\t}, INPUT_EVENT_DEBOUNCE_WAIT, { leading: true } );\n\n\t// Debounce emitting the #input event. When data is huge, instance#getData()\n\t// takes a lot of time to execute on every single key press and ruins the UX.\n\t//\n\t// See: https://github.com/ckeditor/ckeditor5-vue/issues/42\n\teditor.model.document.on( 'change:data', emitDebouncedInputEvent );\n\n\teditor.editing.view.document.on( 'focus', ( evt: EventInfo ) => {\n\t\temit( 'focus', evt, editor );\n\t} );\n\n\teditor.editing.view.document.on( 'blur', ( evt: EventInfo ) => {\n\t\temit( 'blur', evt, editor );\n\t} );\n}\n\ncheckVersion();\n\nonMounted( () => {\n\t// Clone the config first so it never gets mutated (across multiple editor instances).\n\t// https://github.com/ckeditor/ckeditor5-vue/issues/101\n\tconst editorConfig: EditorConfig = appendAllIntegrationPluginsToConfig(\n\t\tObject.assign( {}, props.config )\n\t);\n\n\tif ( model.value ) {\n\t\teditorConfig.initialData = model.value;\n\t}\n\n\t( props.editor.create( element.value, editorConfig ) as unknown as Promise<EditorType> )\n\t\t.then( editor => {\n\t\t\t// Save the reference to the instance for further use.\n\t\t\tinstance.value = markRaw( editor );\n\n\t\t\tsetUpEditorEvents( editor );\n\n\t\t\t// Synchronize the editor content. The #modelValue may change while the editor is being created, so the editor content has\n\t\t\t// to be synchronized with these potential changes as soon as it is ready.\n\t\t\tif ( model.value !== editorConfig.initialData ) {\n\t\t\t\teditor.data.set( model.value );\n\t\t\t}\n\n\t\t\t// Set initial disabled state.\n\t\t\tif ( props.disabled ) {\n\t\t\t\teditor.enableReadOnlyMode( VUE_INTEGRATION_READ_ONLY_LOCK_ID );\n\t\t\t}\n\n\t\t\t// Let the world know the editor is ready.\n\t\t\temit( 'ready', editor );\n\t\t} )\n\t\t.catch( error => {\n\t\t\tconsole.error( error );\n\t\t} );\n} );\n\nonBeforeUnmount( () => {\n\tif ( instance.value ) {\n\t\tinstance.value.destroy();\n\t\tinstance.value = undefined;\n\t}\n\n\t// Note: By the time the editor is destroyed (promise resolved, editor#destroy fired)\n\t// the Vue component will not be able to emit any longer. So emitting #destroy a bit earlier.\n\temit( 'destroy' );\n} );\n</script>\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport {\n\tcomputed, ref,\n\tshallowReadonly, watchEffect,\n\ttype ComputedRef, type Ref\n} from 'vue';\n\nimport { uid } from '@ckeditor/ckeditor5-integrations-common';\n\n/**\n * A composable that executes an async function and provides the result.\n *\n * @param asyncFunc The async function to execute.\n * @returns The result of the async function.\n * @example\n *\n * ```ts\n * const { loading, data, error } = useAsync( async () => {\n * \tconst response = await fetch( 'https://api.example.com/data' );\n * \treturn response.json();\n * } );\n * ```\n */\nexport const useAsync = <R>(\n\tasyncFunc: () => Promise<R>\n): AsyncComposableResult<R> => {\n\t// The UUID of the last query to prevent race conditions between multiple queries.\n\tconst lastQueryUUID = ref<string | null>( null );\n\n\t// The error thrown by the async function.\n\tconst error = ref<Error | null>( null );\n\n\t// The data returned by the async function.\n\tconst data: Ref<R | null> = ref( null );\n\n\t// Whether the async function is currently loading.\n\tconst loading = computed( () => lastQueryUUID.value !== null );\n\n\t// Execute the async function and update the result. This will be re-executed\n\t// whenever refs used inside the `asyncFunc` change.\n\twatchEffect( async () => {\n\t\tconst currentQueryUID = uid();\n\n\t\tlastQueryUUID.value = currentQueryUID;\n\t\tdata.value = null;\n\t\terror.value = null;\n\n\t\t// This function is called before updating `data`, `error` or `loading`\n\t\t// because the `watchEffect` could be re-triggered with the new data\n\t\t// while waiting for the previous `asyncFunc` to resolve.\n\t\tconst shouldDiscardQuery = () => lastQueryUUID.value !== currentQueryUID;\n\n\t\ttry {\n\t\t\tconst result = await asyncFunc();\n\n\t\t\tif ( !shouldDiscardQuery() ) {\n\t\t\t\tdata.value = result;\n\t\t\t}\n\t\t} catch ( err: any ) {\n\t\t\tif ( !shouldDiscardQuery() ) {\n\t\t\t\terror.value = err;\n\t\t\t}\n\t\t} finally {\n\t\t\tif ( !shouldDiscardQuery() ) {\n\t\t\t\tlastQueryUUID.value = null;\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn {\n\t\tloading: shallowReadonly( loading ),\n\t\tdata: shallowReadonly( data ),\n\t\terror: shallowReadonly( error )\n\t};\n};\n\n/**\n * The result of the `useAsync` composable.\n */\nexport type AsyncComposableResult<R> = {\n\n\t/**\n\t * Whether the async function is currently loading.\n\t */\n\tloading: ComputedRef<boolean>;\n\n\t/**\n\t * \tThe data returned by the async function.\n\t */\n\tdata: Ref<R | null>;\n\n\t/**\n\t * The error thrown by the async function.\n\t */\n\terror: Ref<Error | null>;\n};\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport { toValue, type MaybeRefOrGetter } from 'vue';\nimport { useAsync, type AsyncComposableResult } from './composables/useAsync.js';\n\nimport {\n\tloadCKEditorCloud,\n\ttype CKEditorCloudConfig,\n\ttype CKEditorCloudResult\n} from '@ckeditor/ckeditor5-integrations-common';\n\n/**\n * A composable function that loads CKEditor Cloud services.\n *\n * @param config The configuration of the CKEditor Cloud services.\n * @returns The result of the loaded CKEditor Cloud services.\n * @template Config The type of the CKEditor Cloud configuration.\n * @example\n * ```ts\n * const { data } = useCKEditorCloud( {\n * \tversion: '43.0.0',\n * \tlanguages: [ 'en', 'de' ],\n * \tpremium: true\n * } );\n *\n * if ( data.value ) {\n * \tconst { CKEditor, CKEditorPremiumFeatures } = data.value;\n * \tconst { Paragraph } = CKEditor;\n *\n * \t// ..\n * }\n */\nexport default function useCKEditorCloud<Config extends CKEditorCloudConfig>(\n\tconfig: MaybeRefOrGetter<Config>\n): AsyncComposableResult<CKEditorCloudResult<Config>> {\n\treturn useAsync(\n\t\t(): Promise<CKEditorCloudResult<Config>> => loadCKEditorCloud(\n\t\t\ttoValue( config )\n\t\t)\n\t);\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* eslint-env browser */\nimport * as Vue from 'vue';\nimport Ckeditor from './ckeditor.vue';\n\n/* istanbul ignore if -- @preserve */\nif ( !Vue.version || !Vue.version.startsWith( '3.' ) ) {\n\tthrow new Error(\n\t\t'The CKEditor plugin works only with Vue 3+. ' +\n\t\t'For more information, please refer to ' +\n\t\t'https://ckeditor.com/docs/ckeditor5/latest/builds/guides/integration/frameworks/vuejs-v3.html'\n\t);\n}\n\nconst CkeditorPlugin = {\n\t/**\n\t * Installs the plugin, registering the `<ckeditor>` component.\n\t *\n\t * @param app The application instance.\n\t */\n\tinstall( app: Vue.App ): void {\n\t\tapp.component( 'Ckeditor', Ckeditor );\n\t}\n};\n\n/**\n * The component is exported as `Ckeditor` and not `CKEditor`, because of how Vue handles components with\n * capitalized names. The component with more than one consecutive capital letter will also be be available\n * in kebab-case, where each capital letter is separated by `-`. This way, the `CKEditor` component will\n * be available as `c-k-editor`, which doesn't look good.\n */\nexport {\n\tCkeditorPlugin,\n\tCkeditor\n};\n\n/**\n * CDN related exports.\n */\n\nexport { default as useCKEditorCloud } from './useCKEditorCloud.js';\n\nexport {\n\tloadCKEditorCloud,\n\ttype CKEditorCloudResult,\n\ttype CKEditorCloudConfig,\n\ttype CdnPluginsPacks\n} from '@ckeditor/ckeditor5-integrations-common';\n\ndeclare module 'vue' {\n\tinterface GlobalComponents {\n\t\tCkeditor: typeof Ckeditor;\n\t\tckeditor: typeof Ckeditor;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["version", "_useModel", "version", "Ckeditor"]
}
